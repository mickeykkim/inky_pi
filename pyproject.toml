[tool]
[tool.poetry]
authors = ["Mickey Kim <mickeykkim@gmail.com>"]
classifiers = [
  'Development Status :: 2 - Pre-Alpha',
  'Intended Audience :: Developers',
  'License :: OSI Approved :: MIT License',
  'Natural Language :: English',
  'Programming Language :: Python :: 3.7',
  'Programming Language :: Python :: 3.8',
  'Programming Language :: Python :: 3.9',
]
description = "Top-level package for inky-pi."
homepage = "https://github.com/mickeykkim/inky_pi"
license = "MIT"
name = "inky_pi"
packages = [{include = "inky_pi"}, {include = "tests", format = "sdist"}]
readme = "README.rst"
version = "0.1.0"

[[tool.poetry.source]]
default = true
name = "pypi-public"
url = "https://pypi.org/simple/"

[[tool.poetry.source]]
name = "piwheels"
url = "https://www.piwheels.org/simple/"

[tool.poetry.dependencies]
Pillow = "^9.0.0"
"RPi.GPIO" = {version = "^0.7.0", markers = "platform_machine == 'armv7l'"}
click = "^8.1.2"
environs = "^9.3.2"
font-fredoka-one = "^0.0.4"
font-hanken-grotesk = "^0.0.2"
inky = {version = "^1.2.0", markers = "platform_machine == 'armv7l'"}
loguru = "^0.5.3"
numpy = "1.21.1"
python = ">=3.7,<3.10"
rich = "^12.4.1"
urllib3 = "^1.26.8"
zeep = "^4.0.0"

[tool.poetry.dev-dependencies]
black = "^22.3.0"
bumpversion = "^0.6.0"
coverage = "^6.3.2"
flake8 = "^3.9.2"
importlib-metadata = "^4.11.3"
invoke = "^1.7.0"
mypy = "^0.950"
pre-commit = "^2.17.0"
pylint = "^2.0"
pytest = "^6.2.5"
sphinx = "^4.3.2"
sphinx-rtd-theme = "^1.0.0"
tox = "^3.24.4"
types-requests = "^2.25.8"

[tool.poetry.scripts]
inky_pi = "inky_pi.cli:main"

[tool.pytest.ini_options]
filterwarnings = "ignore::DeprecationWarning"
markers = [
  "integration", # end-to-end tests
  "e2e",
]
minversion = "6.0"

[tool.isort]
profile = "black"

[tool.coverage.report]
exclude_lines = ["if __name__ == .__main__.:"]
skip_empty = true

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
envlist = py3.7, py3.8, py3.9

[testenv]
description = Run compliance tests
whitelist_externals = poetry
setenv =
    PIP_EXTRA_INDEX_URL = https://www.piwheels.org/simple/
require_locked_deps = true
install_dev_deps = true
commands =
    poetry run invoke format --check
    poetry run invoke lint
    poetry run invoke test
"""

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]
