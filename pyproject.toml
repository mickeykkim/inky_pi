[tool]
[tool.poetry]
authors = ["Mickey Kim <mickeykkim@gmail.com>"]
classifiers = [
  'Development Status :: 2 - Pre-Alpha',
  'Intended Audience :: Developers',
  'License :: OSI Approved :: MIT License',
  'Natural Language :: English',
  'Programming Language :: Python :: 3.8',
  'Programming Language :: Python :: 3.9',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
]
description = "Top-level package for inky-pi."
homepage = "https://github.com/mickeykkim/inky_pi"
license = "MIT"
name = "inky_pi"
packages = [{include = "inky_pi"}, {include = "tests", format = "sdist"}]
readme = "README.rst"
version = "0.1.2"

[[tool.poetry.source]]
default = true
name = "pypi-public"
url = "https://pypi.org/simple/"

[[tool.poetry.source]]
name = "piwheels"
url = "https://www.piwheels.org/simple/"

[tool.poetry.dependencies]
Pillow = "^9.3.0"
"RPi.GPIO" = {version = "^0.7.0", markers = "platform_machine == 'armv7l'"}
click = "^8.1.2"
environs = "^9.3.2"
font-fredoka-one = "^0.0.4"
font-hanken-grotesk = "^0.0.2"
inky = {version = "^1.2.0", markers = "platform_machine == 'armv7l'"}
loguru = "^0.6.0"
numpy = "~1.22"
python = ">=3.8,<4"
rich = "^13.3.2"
urllib3 = "^1.26.15"
zeep = "^4.2.1"

[tool.poetry.group.dev.dependencies]
bandit = "^1.7.4"
black = "^22.3.0"
bumpversion = "^0.6.0"
coverage = "^6.3.2"
flake8 = "^5.0.0"
importlib-metadata = "^4.0.0"
invoke = "^2.0.0"
mypy = "^0.982"
poetry-plugin-export = "^1.0.6"
pre-commit = "^2.17.0"
pylint = "^2.0"
pytest = "^7.1.3"
pytest-cov = "^4.0.0"
safety = "^2.1.1"
ssort = "^0.11.6"
sphinx = "^5.2.3"
sphinx-rtd-theme = "^1.0.0"
tox = "^4.0.0"
types-requests = "^2.25.8"
ruff = "^0.0.257"

[tool.poetry.scripts]
inky_pi = "inky_pi.cli:main"

[tool.pytest.ini_options]
filterwarnings = "ignore::DeprecationWarning"
markers = [
  "integration", # end-to-end tests
  "e2e",
]
minversion = "6.0"

[tool.isort]
profile = "black"

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F"]
ignore = []
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F"]
unfixable = []
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "__pycache__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "bin",
]
# Same as Black.
line-length = 100
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# Assume Python 3.10.
target-version = "py310"
[tool.ruff.mccabe]
max-complexity = 7

[tool.coverage.report]
exclude_lines = ["if __name__ == .__main__.:"]
skip_empty = true

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
envlist = py3.8, py3.9, py3.10, py3.11

[testenv:py3.8]
basepython=python3.8

[testenv:py3.9]
basepython=python3.9

[testenv:py3.10]
basepython=python3.10

[testenv:py3.11]
basepython=python3.11

[testenv]
description = Run compliance tests
allowlist_externals = poetry, invoke
setenv =
    PIP_EXTRA_INDEX_URL = https://www.piwheels.org/simple/
require_locked_deps = true
install_dev_deps = true
commands =
    invoke format --check
    invoke lint
    invoke security
    invoke test --junit --coverage="xml"
"""

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]
